package com.metasoft.service;
import java.util.List;

import javax.annotation.PostConstruct;

import org.apache.thrift.TException;
import org.apache.thrift.protocol.TBinaryProtocol;
import org.apache.thrift.protocol.TProtocol;
import org.apache.thrift.transport.TSocket;
import org.apache.thrift.transport.TTransportException;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.util.Assert;

import com.keymobile.dataSharingMgr.interfaces.DataSharingMgrError;
import com.keymobile.dataSharingMgr.interfaces.DataSharingMgrService;
import com.keymobile.dataSharingMgr.interfaces.security.ExtUser;
import com.metasoft.model.dao.ApplicationDao;
import com.metasoft.thrift.MsgFinished;
import com.metasoft.thrift.MsgService;
import com.metasoft.thrift.MsgService.Client;
import com.metasoft.thrift.MsgStruct;
import com.metasoft.thrift.MsgToProcess;
@Service
public class MessageService {
	static Logger log = LoggerFactory.getLogger(MessageService.class);
	@Value("${msg.addrs}")
	private String addrs;
	private String host;
	private int port;
	
	@Autowired
	private DataSharingMgrService dataSharingMgrService;
	
	@PostConstruct
	void init(){
		String[] strs = addrs.split(":");
		Assert.isTrue(strs.length==2,"msg.addrs wrong");
		host = strs[0];
		port = Integer.valueOf(strs[1]);
	}
	
	public void send(){
		TClient tc = new TClient();
        
        MsgStruct msg = new MsgStruct("foo","bar");
        try {
        	tc.client.send(msg);
		} catch (TException e) {
			e.printStackTrace();
		}
        
        tc.tsocket.close();
	}
	
	public void sendMsgToProcess(String tenantId,String Status, ApplicationDao appl) throws DataSharingMgrError{
		List<ExtUser> admins = dataSharingMgrService.getAllTenantUsers(tenantId);
		Assert.isTrue(admins.size()>0);		
		for(ExtUser Admin:admins){
			if(Admin.getACL()!=1){
				continue;
			}
			ExtUser Submituser = dataSharingMgrService.getExtUserById(appl.getUser_id()); 
	        MsgToProcess msg = new MsgToProcess(Admin.getUserAccount(),Status,Submituser.getUserAccount(),appl.getTitle(),appl.getAppl_id());
	        try {
	        	TClient tc = new TClient();
	        	log.info(msg.toString());
	        	tc.client.sendMsgToProcess(msg);
		        tc.tsocket.close();
			} catch (TException e) {
				e.printStackTrace();
			}
		}
	}
	
	public void sendMsgFinished(String userId, String Title, String Applid) throws DataSharingMgrError{
		ExtUser User = dataSharingMgrService.getExtUserById(userId);    
		MsgFinished msg = new MsgFinished(User.getUserAccount(), Title, Applid);
        try {
        	TClient tc = new TClient();
        	log.info(msg.toString());
        	tc.client.sendMsgFinished(msg);
        	tc.tsocket.close();
		} catch (TException e) {
			e.printStackTrace();
		}
	}
	
	class TClient{
		public Client client;
		public TSocket tsocket;
		
		TClient(){		
			tsocket = new TSocket(host, port);
	        try {
	        	tsocket.open();
			} catch (TTransportException e) {
				e.printStackTrace();
			}
	        
	        TProtocol protocol = new  TBinaryProtocol(tsocket);
	        client = new MsgService.Client(protocol);
		}
	}
}
